<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="pc0741" failures="0" tests="1" name="Default test" time="0.108" errors="0" timestamp="2023-04-27T18:56:21 IST">
  <testcase classname="Mypckg.NewTest" name="@BeforeTest beforeTest" time="0.061">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: D:\Workspace\PracticeProject\.\GeckoDriver\geckodriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Workspace\PracticeProject\.\GeckoDriver\geckodriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:345)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:161)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:156)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:47)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:164)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:100)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:111)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:101)
at Mypckg.NewTest.beforeTest(NewTest.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Mypckg.NewTest" name="@AfterTest afterTest" time="-1.682601981664E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Mypckg.NewTest" name="f" time="0.0">
    <skipped/>
  </testcase> <!-- f -->
</testsuite> <!-- Default test -->
